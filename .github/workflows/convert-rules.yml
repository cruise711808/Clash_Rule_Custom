name: Convert Clash Rules

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 00:00 UTC（北京时间 08:00）触发
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 赋予 GITHUB_TOKEN 写入权限

jobs:
  check-and-convert:
    runs-on: ubuntu-latest
    steps:
      - name: 克隆仓库
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 确保使用 GitHub 提供的 Token

      - name: 获取最新 Clash Rules Release 版本
        id: get_latest_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/Loyalsoldier/clash-rules/releases/latest | jq -r '.tag_name')
          if [ -z "$LATEST_RELEASE" ] || [ "$LATEST_RELEASE" = "null" ]; then
            echo "未找到最新版本，退出..."
            exit 1
          fi
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV

      - name: 下载最新的规则文件
        run: |
          mkdir -p rules
          cd rules
          FILES=(apple.txt applications.txt cncidr.txt direct.txt gfw.txt google.txt greatfire.txt icloud.txt lancidr.txt private.txt proxy.txt reject.txt telegramcidr.txt tld-not-cn.txt)
          for file in "${FILES[@]}"; do
            wget -q --retry-connrefused --waitretry=5 --timeout=30 --tries=5 "https://github.com/Loyalsoldier/clash-rules/releases/download/${{ env.LATEST_RELEASE }}/$file" || { echo "下载 $file 失败"; exit 1; }
          done
          ls -l

      - name: 获取 mihomo 最新版本号
        id: get_mihomo_version
        run: |
          MIHOMO_VERSION=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
          if [ -z "$MIHOMO_VERSION" ] || [ "$MIHOMO_VERSION" = "null" ]; then
            echo "未找到 mihomo 最新版本，退出..."
            exit 1
          fi
          echo "MIHOMO_VERSION=$MIHOMO_VERSION" >> $GITHUB_ENV

      - name: 安装 mihomo
        run: |
          wget -q "https://github.com/MetaCubeX/mihomo/releases/download/${{ env.MIHOMO_VERSION }}/mihomo-linux-amd64-${{ env.MIHOMO_VERSION }}.deb" -O mihomo.deb
          sudo dpkg -i mihomo.deb
          rm mihomo.deb

      - name: 确保 mihomo 可用
        run: |
          mihomo -v || { echo "mihomo 安装失败"; exit 1; }

      - name: 转换 .txt 文件为 .mrs
        run: |
          mkdir -p converted/Loyalsoldier
          for file in rules/*.txt; do
            base_name=$(basename "$file" .txt)
            if [[ "$base_name" =~ cidr$ ]]; then
              # 以 'cidr' 结尾的文件使用 ipcidr 规则转换
              mihomo convert-ruleset ipcidr yaml "$file" "converted/Loyalsoldier/$base_name.mrs"
            else
              # 其他文件使用 domain 规则转换
              mihomo convert-ruleset domain yaml "$file" "converted/Loyalsoldier/$base_name.mrs"
            fi
          done
          ls -l converted/Loyalsoldier

      - name: 检查 .mrs 文件是否正确生成
        run: |
          if [ -z "$(ls -A converted/Loyalsoldier/*.mrs 2>/dev/null)" ]; then
            echo "错误: .mrs 文件未正确生成！"
            exit 1
          else
            echo "成功: .mrs 文件生成完成！"
            ls -l converted/Loyalsoldier
          fi

      - name: 提交转换后的文件到仓库
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add converted/Loyalsoldier/*
          git commit -m "更新 Clash 规则 MRS 格式: ${{ env.LATEST_RELEASE }}" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
